{"version":3,"sources":["reducers.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Header.js","components/ErrorBoundry.js","containers/App.js","actions.js","constants.js","serviceWorker.js","index.js"],"names":["initialStateSearch","searchField","initialStateRobots","isPending","robots","error","Card","_ref","id","name","email","react_default","a","createElement","className","src","concat","alt","CardList","map","robot","components_Card","key","SearchBox","searchChange","aria-label","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","Header","nextProps","nextState","Component","ErrorBoundry","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","info","setState","App","onRequestRobots","_this$props","onSearchChange","filteredRobots","filter","toLowerCase","includes","components_Header","components_SearchBox","searchfield","components_Scroll","components_ErrorBoundry","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","asyncToGenerator","regenerator_default","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","stop","_x","apply","arguments","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","rootReducer","combineReducers","length","undefined","action","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","logger","ReactDOM","render","es","containers_App","document","getElementById","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.260eacd7.chunk.js","sourcesContent":["import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from './constants';\n\nconst initialStateSearch = {\n  searchField: ''\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, searchField: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_ROBOTS_SUCCESS:\n      return { ...state, robots: action.payload, isPending: false };\n    case REQUEST_ROBOTS_FAILED:\n      return { ...state, error: action.payload, isPending: false };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\n\nconst Card = ({ id, name, email }) => (\n  <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-s\">\n    <img src={`https://robohash.org/${id}?size=200x200`} alt=\"\" />\n    <div>\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => \n  /**\n  if (true) {\n    throw new Error('Nooooo!');\n  }\n  * */\n   (\n    <div>\n      {robots.map(robot => (\n        <Card\n          key={robot.id}\n          id={robot.id}\n          name={robot.name}\n          email={robot.email}\n        />\n      ))}\n    </div>\n  )\n;\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => (\n  <div className=\"pa2\">\n    <input\n      aria-label=\"Search Robots\"\n      className=\"pa3 ba b--green b-lightest-blue\"\n      type=\"search\"\n      placeholder=\"search robots\"\n      onChange={searchChange}\n    />\n  </div>\n);\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = ({ children }) => (\n  <div\n    style={{ overflowY: 'scroll', border: '1px solid black', height: '800px' }}\n  >\n    {children}\n  </div>\n);\n\nexport default Scroll;\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return false;\n  }\n\n  render() {\n    return <h1>RoboFriends</h1>;\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n    if (hasError) {\n      return <h1>Ooooops. That is not good</h1>;\n    }\n    return children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport Header from '../components/Header';\nimport ErrorBoundry from '../components/ErrorBoundry';\n\nimport { setSearchField, requestRobots } from '../actions';\n\nclass App extends Component {\n  componentDidMount() {\n    const { onRequestRobots } = this.props;\n    onRequestRobots();\n  }\n\n  render() {\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter(robot =>\n      robot.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    if (isPending) {\n      return <h1>Loading...</h1>;\n    }\n    return (\n      <div className=\"tc\">\n        <Header />\n        <SearchBox searchfield={searchField} searchChange={onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchField: state.searchRobots.searchField,\n  robots: state.requestRobots.robots,\n  isPending: state.requestRobots.isPending,\n  error: state.requestRobots.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSearchChange: event => dispatch(setSearchField(event.target.value)),\n  onRequestRobots: () => dispatch(requestRobots())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from './constants';\n\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\n\n// async action\nexport const requestRobots = () => async dispatch => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users');\n    const data = await response.json();\n    return dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data });\n  } catch (error) {\n    return dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error });\n  }\n};\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport 'tachyons';\nimport './index.css';\n\nimport { searchRobots, requestRobots } from './reducers';\n\nimport App from './containers/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nconst AppProvider = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}